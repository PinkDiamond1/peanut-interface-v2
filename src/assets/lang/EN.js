module.exports = {
  message: {
    userlogin: 'Login',
    steemAccoutPlaceHolder: 'Input Steem Account',
    login: 'Login',
    loging:"Login...",
    delegatemine: 'Mining by Delegation',
    spbalance: 'SP Balance',
    yourspdelegate: 'Delegated SP',
    cancel: "Cancel",
    comfirm: "Confrim",

    sptotaldelegate: 'Total Delegated SP',
    totalpnut: 'Total PNUT',
    apy: 'APY',
    pnutprofits: 'Your Mined PNUT',
    withdraw: 'Harvest',
    balance: 'Balance',
    approveContract:"Approve Contract",
    max:"Max",
    confirmconvert: 'Confirm Conversion',
    servicecharge: 'Transaction Fee',
    delegatecharge: 'Delegation Fee',
    atleastcharge: 'minimum',
    convertrate: 'Conversion Ratio',
    logout: 'Logout',
    confirmdelegate: 'Confirm Delegation',
    delegatedsp: 'Delegated SP',
    steembalance: 'STEEM Balance',
    sbdbalance: 'SBD Balance',
    tronbalance: 'Tron Balance',
    tsteembalance: 'TSTEEM Balance',
    tsbdbalance: 'TSBD Balance',
    pnutbalance: 'PNUT Balance',
    input: 'Input',

    setting: 'Setting',
    whitePaper: 'White Paper',
    nps: 'Nutbox Proposal System',
    userBook: 'User Handbook',
    questions: 'Questions',
    contract: 'Contract',
    swap: 'Swap',
    tools: 'Tools',
    contact: 'Contact',
    docs: 'Docs',
    discord: 'Discord',
    about: 'About',
    blog: 'Blog',
    changeSteemNode: 'Steem Node(Option)',
    contractAddr: 'Contract Address',
    
    language: 'Language',
    zh: '中文',
    en: 'English',
    kr: '한국어',
    '': ''
  },
  wallet: {
    wallet: 'Wallet',
    swap: 'Cross chain transfer',
    connectSteem:"Connect Steem-Keychain",
    connectTron:"Connect tron-link"
  },
  stake: {
    stake: 'Stake'
  },
  farm: {
    farm: 'Farm',
    tsp: {
      tspMine: 'TSP Stake',
      yourTspAmount: 'TSP Staked',
      balanceOfTsp: 'TSP Balance',
      tspMinlingFee: 'Fee',
      totalDepositTsp: 'Total deposited TSP',
      confirmDeposit: 'Confirm',
      addTspDeposit: 'Stake',
      minusTspDeposit: 'Unstake',
      notEnoughFee: 'Insufficient fee',
    },
    tspLp: {
      tspLPBalance: 'S-TSP-TRX Balance',
      yourTSPLPAmount: 'S-TSP-TRX Staked',
      totalDepositTspLP:"Total deposited S-TSP-TRX",
      totalTSP: 'Total TSP',
    },
    pnutLp: {
      pnutLPBalance: 'S-PNUT-TRX Balance',
      yourPNUTLPAmount: 'S-PNUT-TRX Staked',
      totalDepositPnutLP:'Total deposited S-PNUT-TRX'
    }
  },
  liquidStaking: {
    liquidStaking: 'Liquid Stading',
    tsp: {
      tspIsCirculatingSP: 'TSP is the equivalent of SP, TSP can enjoy the same staking reward of SP, and TSP can be traded',
      tsptosteemintro: 'The withdrawn TSP will be returned to your Steem account in around 33~40 days.'
    }
  },
  vote:{
    upvote:"Upvote",
    vote:"Vote post",
    title:"Pay PNUT,get nutbox.mine's vote",
    link:"Post link",
    payPnut:"Pay PNUT",
    linkPlaceholder:"Input post link",
    pnutPlaceholder:"Input PNUT amount",
    transfer:"Transfer",
    voteRate:"Vote rate：{lowerPnutAmount} PNUT for 10% vote",
  },
  nps: {
    nps: 'Goverance',
    pass: 'Passed',
    pending: 'Pending'
  },
  error: {
    error: 'Error!',
    depositFail: 'Deposit fail',
    withdrawFail: 'Withdraw fail',
    changeDepsitFail: 'Change deposition fail',
    delegateFail: 'Delegate fail',
    changeDelegateFail: 'Change delegation fail',
    approveFail: 'Approve fail',
    accountChanged: 'steem and tron address mismatch',
    delegateerror: 'Delegation Error！',
    tryrefreshpage: 'Error，please refresh page and try again！',
    steemloginerr: 'Steem login failed!',
    needkeychainandtronlink: 'Need to install Steem Keychain and TronLink！',
    needkeychain: 'Please install Steem Keychain',
    needtronlink: 'Please install TronLink',
    insufficientEnerge: 'Not enough energy',
    transferFail: 'Transfer fail',
    unlockKeychain: 'Please unlock Steem-keychain',
    unlockWallet: 'Please unlock tronlink',
    steemLoginFail: 'Steem login fail',
    illegalTronAddress: 'Invalid tron address',
    inputError: 'Input wrong value',
    inputOverflow: 'Input overflow',
    inputOutOfRange: "Please input value between {lowerPnutAmount}-{uperPnutAmount}",
    inputLinkIllegal:"Please input correct link",
    notEnoughFee: 'Insufficient fee',
    insufficentPnut:"Insufficent PNUT"
  },
}
